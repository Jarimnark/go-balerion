package main

import (
	"testing"

	"github.com/shopspring/decimal"
)

// TestConvertBahtToThaiText covers different edge cases for Thai currency conversion
func TestConvertBahtToThaiText(t *testing.T) {
	tests := []struct {
		input    string
		expected string
	}{
		// Basic Cases
		{"0", "ศูนย์บาทถ้วน"},
		{"1", "หนึ่งบาทถ้วน"},
		{"9", "เก้าบาทถ้วน"},
		{"10", "สิบบาทถ้วน"},
		{"11", "สิบเอ็ดบาทถ้วน"},
		{"21", "ยี่สิบเอ็ดบาทถ้วน"},
		{"101", "หนึ่งร้อยเอ็ดบาทถ้วน"},
		{"110", "หนึ่งร้อยสิบบาทถ้วน"},
		{"999", "เก้าร้อยเก้าสิบเก้าบาทถ้วน"},

		// Large Numbers
		{"1000", "หนึ่งพันบาทถ้วน"},
		{"10000", "หนึ่งหมื่นบาทถ้วน"},
		{"100000", "หนึ่งแสนบาทถ้วน"},
		{"1000000", "หนึ่งล้านบาทถ้วน"},
		{"2500000", "สองล้านห้าแสนบาทถ้วน"},
		{"100000000", "หนึ่งร้อยล้านบาทถ้วน"},
		{"1000000000", "หนึ่งพันล้านบาทถ้วน"},
		{"999999999999", "เก้าแสนเก้าหมื่นเก้าพันเก้าร้อยเก้าสิบเก้าล้านเก้าแสนเก้าหมื่นเก้าพันเก้าร้อยเก้าสิบเก้าบาทถ้วน"},

		// Decimal Cases (Satang)
		{"0.01", "หนึ่งสตางค์"},
		{"0.50", "ห้าสิบสตางค์"},
		{"0.99", "เก้าสิบเก้าสตางค์"},
		{"1.50", "หนึ่งบาทห้าสิบสตางค์"},
		{"21.99", "ยี่สิบเอ็ดบาทเก้าสิบเก้าสตางค์"},
		{"100.01", "หนึ่งร้อยบาทหนึ่งสตางค์"},
		{"1000.75", "หนึ่งพันบาทเจ็ดสิบห้าสตางค์"},
		{"9999999.99", "เก้าล้านเก้าแสนเก้าหมื่นเก้าพันเก้าร้อยเก้าสิบเก้าบาทเก้าสิบเก้าสตางค์"},

		// Zero edge cases
		{"0.00", "ศูนย์บาทถ้วน"},
		{"0.75", "เจ็ดสิบห้าสตางค์"},
		{"0.10", "สิบสตางค์"},

		// Extreme case
		{"999999999999.99", "เก้าแสนเก้าหมื่นเก้าพันเก้าร้อยเก้าสิบเก้าล้านเก้าแสนเก้าหมื่นเก้าพันเก้าร้อยเก้าสิบเก้าบาทเก้าสิบเก้าสตางค์"},
	}

	for _, test := range tests {
		amount, _ := decimal.NewFromString(test.input)
		result := convertBahtToThaiText(amount)

		if result != test.expected {
			t.Errorf("For input %s, expected %s but got %s", test.input, test.expected, result)
		}
	}
}
